{"ast":null,"code":"import { environment } from '../../environments/environment';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    this.baseUrl = environment.apiUrl;\n  }\n  getProducts(pageNumber, pageSize, sortField, sortOrder) {\n    const url = `${this.baseUrl}/products?pageNumber=${pageNumber}&pageSize=${pageSize}&sortField=${sortField}&sortOrder=${sortOrder}`;\n    return this.http.get(url);\n  }\n  getProductsWithMSSql() {\n    const url = `${this.baseUrl}/poductswithmssql`;\n    return this.http.get(url);\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["environment","ProductService","constructor","http","baseUrl","apiUrl","getProducts","pageNumber","pageSize","sortField","sortOrder","url","get","getProductsWithMSSql","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["D:\\Projects\\Sigma\\AngularDemo\\AngularDemo\\angularapp\\src\\app\\Services\\product.service.ts"],"sourcesContent":["import { Injectable } from '@angular/core';\r\nimport { HttpClient } from '@angular/common/http';\r\nimport { Observable } from 'rxjs';\r\nimport { environment } from '../../environments/environment';\r\nimport { Product } from '../Models/product';\r\n\r\n@Injectable({\r\n  providedIn: 'root'\r\n})\r\nexport class ProductService {\r\n  public products?: Product[];\r\n  private baseUrl = environment.apiUrl;\r\n\r\n  constructor(private http: HttpClient) { }\r\n\r\n  getProducts(pageNumber: number, pageSize: number, sortField: string, sortOrder: string): Observable<Product[]> {\r\n    const url = `${this.baseUrl}/products?pageNumber=${pageNumber}&pageSize=${pageSize}&sortField=${sortField}&sortOrder=${sortOrder}`;\r\n    return this.http.get<Product[]>(url);\r\n  }\r\n\r\n  getProductsWithMSSql(): Observable<Product[]> {\r\n    const url = `${this.baseUrl}/poductswithmssql`;\r\n    return this.http.get<Product[]>(url);\r\n  }\r\n}\r\n"],"mappings":"AAGA,SAASA,WAAW,QAAQ,gCAAgC;;;AAM5D,OAAM,MAAOC,cAAc;EAIzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IAFhB,KAAAC,OAAO,GAAGJ,WAAW,CAACK,MAAM;EAEI;EAExCC,WAAWA,CAACC,UAAkB,EAAEC,QAAgB,EAAEC,SAAiB,EAAEC,SAAiB;IACpF,MAAMC,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,wBAAwBG,UAAU,aAAaC,QAAQ,cAAcC,SAAS,cAAcC,SAAS,EAAE;IAClI,OAAO,IAAI,CAACP,IAAI,CAACS,GAAG,CAAYD,GAAG,CAAC;EACtC;EAEAE,oBAAoBA,CAAA;IAClB,MAAMF,GAAG,GAAG,GAAG,IAAI,CAACP,OAAO,mBAAmB;IAC9C,OAAO,IAAI,CAACD,IAAI,CAACS,GAAG,CAAYD,GAAG,CAAC;EACtC;;AAdWV,cAAc,C;mBAAdA,cAAc,EAAAa,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdhB,cAAc,C;SAAdA,cAAc;EAAAiB,OAAA,EAAdjB,cAAc,CAAAkB,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}